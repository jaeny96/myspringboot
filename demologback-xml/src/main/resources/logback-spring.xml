<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!-- 
properties설정 파일을 적용 후 xml파일이 적용된다.
logback-spring.xml을 사용해서 Spring이 logback을 구동할 수 있도록 지원해 주며 이를 이용하여 profile, 
즉 배포 환경에 따른(spring.profiles.active을 활용하여) application.xml에 설정된 properties를 읽어올 수 있다.

-->
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 --> 
<configuration scan="true" scanPeriod="60 seconds"> 
  
<!-- Console Appender --> 
<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender"> 
  <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
    <!-- <pattern>${LOG_PATTERN}</pattern>  -->
    <pattern>%-5level %d{yy-MM-dd HH:mm:ss}[%thread] [%logger{0}:%line] - %msg%n</pattern>
  </encoder> 
</appender> 

<!-- File Appender --> 
<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
<!-- 파일경로 설정 --> 
  <file>./log/my.log</file>
  <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
    <charset>UTF-8</charset>
    <pattern>%-5level %d{yy-MM-dd HH:mm:ss}[%thread] [%logger{0}:%line] - %msg%n</pattern>
  </encoder>
  <!-- Rolling 정책 --> 
  <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
    <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 --> 
    <fileNamePattern>./my.%d{yyyy-MM-dd}_%i.log</fileNamePattern> 
    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
    <!-- 파일당 최고 용량 kb, mb, gb --> 
      <maxFileSize>10MB</maxFileSize> 
    </timeBasedFileNamingAndTriggeringPolicy> 
    <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거--> 
    <maxHistory>30</maxHistory> 
  </rollingPolicy>
</appender>
<root level="WARN">
    <appender-ref ref="CONSOLE"/>
    <appender-ref ref="FILE"/>
</root>
</configuration>
